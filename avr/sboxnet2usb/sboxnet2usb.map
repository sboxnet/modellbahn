Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o (exit)
/usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
                              sboxnet2usb.o (__do_clear_bss)
/usr/lib/gcc/avr/5.4.0/avr35/libc.a(memset.o)
                              sboxnet2usb.o (memset)
/usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_byte.o)
                              sboxnet2usb.o (eeprom_read_byte)
/usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_word.o)
                              sboxnet2usb.o (eeprom_read_word)
/usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_block.o)
                              sboxnet2usb.o (eeprom_update_block)
/usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_byte.o)
                              sboxnet2usb.o (eeprom_update_byte)
/usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_word.o)
                              sboxnet2usb.o (eeprom_update_word)
/usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_block.o)
                              /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_word.o) (eeprom_read_blraw)

Allocating common symbols
Common symbol       size              file

g_sboxnet_addr      0x1               sboxnet2usb.o
g_sboxnet           0x233             sboxnet2usb.o
g_usb_dev           0xd               sboxnet2usb.o

Speicherkonfiguration

Name             Ursprung           LÃ¤nge             Attribute
text             0x0000000000000000 0x0000000000010000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Adresse des Abschnitts .data gesetzt auf 0x800100
LOAD /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o
LOAD sboxnet2usb.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/avr35/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/avr35/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a
END GROUP
                0x0000000000010000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x10000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x302c
 *(.vectors)
 .vectors       0x0000000000000000       0x74 /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000074                . = ALIGN (0x2)
                0x0000000000000074                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000074        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000074                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
 .progmem.data  0x0000000000000074       0x92 sboxnet2usb.o
                0x0000000000000074                g_device_desc_P
                0x0000000000000086                g_config_1_P
                0x0000000000000098                g_string0_P
                0x000000000000009c                g_string1_P
                0x00000000000000e2                g_string2_P
                0x00000000000000fc                g_strings_P
                0x0000000000000106                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000106                __ctors_start = .
 *(.ctors)
                0x0000000000000106                __ctors_end = .
                0x0000000000000106                __dtors_start = .
 *(.dtors)
                0x0000000000000106                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000106        0x0 /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o
                0x0000000000000106                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000106        0xc /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000112       0x10 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
                0x0000000000000112                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 .init8         0x0000000000000122       0x1e sboxnet2usb.o
                0x0000000000000122                stack_init8
 *(.init8)
 *(.init9)
 .init9         0x0000000000000140        0x8 /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o
 *(.init9)
 *(.text)
 .text          0x0000000000000148        0x4 /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o
                0x0000000000000148                __vector_22
                0x0000000000000148                __vector_28
                0x0000000000000148                __vector_1
                0x0000000000000148                __vector_24
                0x0000000000000148                __vector_12
                0x0000000000000148                __bad_interrupt
                0x0000000000000148                __vector_6
                0x0000000000000148                __vector_3
                0x0000000000000148                __vector_13
                0x0000000000000148                __vector_17
                0x0000000000000148                __vector_19
                0x0000000000000148                __vector_7
                0x0000000000000148                __vector_27
                0x0000000000000148                __vector_5
                0x0000000000000148                __vector_4
                0x0000000000000148                __vector_9
                0x0000000000000148                __vector_2
                0x0000000000000148                __vector_21
                0x0000000000000148                __vector_15
                0x0000000000000148                __vector_8
                0x0000000000000148                __vector_26
                0x0000000000000148                __vector_14
                0x0000000000000148                __vector_10
                0x0000000000000148                __vector_20
 .text          0x000000000000014c     0x2e42 sboxnet2usb.o
                0x000000000000105a                __vector_23
                0x00000000000010b4                __vector_25
                0x000000000000180c                __vector_16
                0x00000000000019b0                usb_ep_isIN
                0x0000000000001ab6                __vector_11
                0x0000000000001bac                usb_ep_read_data
                0x0000000000001bf4                usb_ep_waitIN
                0x0000000000001c22                usb_ep_send_zlp
                0x0000000000001c4c                usb_mem_read_byte
                0x0000000000001cac                usb_ep_getbufsize
                0x0000000000001cec                usb_ep_send_in_data
                0x0000000000001db0                usb_ep_send_control_data_chunk
                0x0000000000001e8c                usb_ep_send_control_data_finish
                0x0000000000001f0a                usb_ep_send_control_data
                0x0000000000001f6c                usb_ep_recv_control_data_chunk
                0x0000000000002054                usb_ep_recv_control_data_finish
                0x000000000000206a                usb_ep_recv_control_data
                0x000000000000245a                usb_ep0_task
                0x00000000000025a6                usb_ep_setup
                0x0000000000002678                usb_ep_setup_control
                0x00000000000026c2                usb_intr_endofreset
                0x00000000000026e0                usb_init
                0x0000000000002828                get_string
                0x0000000000002884                usb_event_set_configuration
                0x00000000000028de                usb_event_ep0_request
                0x0000000000002d72                __vector_18
                0x0000000000002f28                main
 .text          0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
 .text          0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
 .text          0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libc.a(memset.o)
 .text          0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_byte.o)
 .text          0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_word.o)
 .text          0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_block.o)
 .text          0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_byte.o)
 .text          0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_word.o)
 .text          0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_block.o)
                0x0000000000002f8e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc.mul
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000002f8e        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000002f8e        0xe /usr/lib/gcc/avr/5.4.0/avr35/libc.a(memset.o)
                0x0000000000002f8e                memset
 .text.avr-libc
                0x0000000000002f9c       0x10 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_byte.o)
                0x0000000000002f9c                eeprom_read_byte
 .text.avr-libc
                0x0000000000002fac        0xc /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_word.o)
                0x0000000000002fac                eeprom_read_word
 .text.avr-libc
                0x0000000000002fb8       0x20 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_block.o)
                0x0000000000002fb8                eeprom_update_block
 .text.avr-libc
                0x0000000000002fd8       0x24 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_byte.o)
                0x0000000000002fd8                eeprom_update_byte
                0x0000000000002fda                eeprom_update_r18
 .text.avr-libc
                0x0000000000002ffc        0xc /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_word.o)
                0x0000000000002ffc                eeprom_update_word
 .text.avr-libc
                0x0000000000003008       0x20 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_block.o)
                0x0000000000003008                eeprom_read_block
                0x000000000000300c                eeprom_read_blraw
                0x0000000000003028                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000003028        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
                0x0000000000003028                exit
                0x0000000000003028                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000003028        0x4 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000302c                _etext = .

.data           0x0000000000800100        0x0 load address 0x000000000000302c
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o
 .data          0x0000000000800100        0x0 sboxnet2usb.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libc.a(memset.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_byte.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_word.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_block.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_byte.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_word.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_block.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800100      0x246
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o
 .bss           0x0000000000800100        0x5 sboxnet2usb.o
                0x0000000000800100                g_sboxnet_flags
                0x0000000000800101                g_sboxnet_status
                0x0000000000800102                g_timer
                0x0000000000800103                g_timer_led_msg_read
                0x0000000000800104                g_timer_led_msg_write
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_exit.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libc.a(memset.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_byte.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_word.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_block.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_byte.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eeupd_word.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/5.4.0/avr35/libatmega32u2.a(eerd_block.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800105      0x241 sboxnet2usb.o
                0x0000000000800105                g_sboxnet_addr
                0x0000000000800106                g_sboxnet
                0x0000000000800339                g_usb_dev
                0x0000000000800346                PROVIDE (__bss_end, .)
                0x000000000000302c                __data_load_start = LOADADDR (.data)
                0x000000000000302c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800346        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800346                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000       0x42
 *(.eeprom*)
 .eeprom        0x0000000000810000       0x42 sboxnet2usb.o
                0x0000000000810000                eeprom
                0x0000000000810042                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x5e8c
 *(.stab)
 .stab          0x0000000000000000     0x5e8c sboxnet2usb.o

.stabstr        0x0000000000000000     0x2f05
 *(.stabstr)
 .stabstr       0x0000000000000000     0x2f05 sboxnet2usb.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 sboxnet2usb.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x6ba
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x6ba /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o

.debug_abbrev   0x0000000000000000      0x65d
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x65d /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x262
 *(.debug_str)
 .debug_str     0x0000000000000000      0x262 /usr/lib/gcc/avr/5.4.0/avr35/crtatmega32u2.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(sboxnet2usb.avr elf32-avr)
LOAD linker stubs
